{"ast":null,"code":"var _jsxFileName = \"/home/gaurav/ReactJs/task-tracker/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    fetchTasks();\n  }, []); //Featch task data\n\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks');\n    const data = await res.json();\n    return data;\n  }; //Add Task\n\n\n  const addTask = task => {\n    const id = Math.floor(Math.random() * 100) + 1;\n    const newTask = {\n      id,\n      ...task\n    };\n    setTasks([...tasks, newTask]);\n  }; //Delete task\n\n\n  const deleteTasks = id => {\n    console.log('deleting', id);\n    setTasks(tasks.filter(task => task.id !== id));\n  }; //togel reminder\n\n\n  const toggleReminder = id => {\n    console.log('toggleReminder', id);\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onAdd: () => setShowAddForm(!showAddForm),\n      showAdd: showAddForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), showAddForm && /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 30\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTasks,\n      onChange: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this) : 'No Task Found!']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"RXG0tOUxZpiOCgfTJaB800PXfrc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/gaurav/ReactJs/task-tracker/src/App.js"],"names":["useState","useEffect","Header","Tasks","AddTask","App","showAddForm","setShowAddForm","tasks","setTasks","fetchTasks","res","fetch","data","json","addTask","task","id","Math","floor","random","newTask","deleteTasks","console","log","filter","toggleReminder","map","reminder","length"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEd,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,KAAD,CAA9C;AAEA,QAAM,CAACQ,KAAD,EAASC,QAAT,IAAqBT,QAAQ,CAAC,EAAD,CAAnC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AAEZS,IAAAA,UAAU;AACb,GAHQ,EAGN,EAHM,CAAT,CANc,CAWd;;AACA,QAAMA,UAAU,GAAG,YAAW;AACtB,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAAD,CAAvB;AACA,UAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAED,WAAOD,IAAP;AACF,GALL,CAZc,CAmBd;;;AACA,QAAME,OAAO,GAAIC,IAAD,IAAS;AACrB,UAAMC,EAAE,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,GAAzB,IAA+B,CAA1C;AACA,UAAMC,OAAO,GAAG;AAACJ,MAAAA,EAAD;AAAK,SAAGD;AAAR,KAAhB;AACAP,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWa,OAAX,CAAD,CAAR;AACH,GAJD,CApBc,CA0Bd;;;AACA,QAAMC,WAAW,GAAIL,EAAD,IAAO;AACvBM,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBP,EAAxB;AACAR,IAAAA,QAAQ,CAACD,KAAK,CAACiB,MAAN,CAAcT,IAAD,IAASA,IAAI,CAACC,EAAL,KAAYA,EAAlC,CAAD,CAAR;AACH,GAHD,CA3Bc,CAgCd;;;AAEA,QAAMS,cAAc,GAAIT,EAAD,IAAO;AAC1BM,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BP,EAA9B;AACAR,IAAAA,QAAQ,CAACD,KAAK,CAACmB,GAAN,CAAWX,IAAD,IAASA,IAAI,CAACC,EAAL,KAAYA,EAAZ,GAAiB,EACzC,GAAGD,IADsC;AAChCY,MAAAA,QAAQ,EAAE,CAACZ,IAAI,CAACY;AADgB,KAAjB,GAExBZ,IAFK,CAAD,CAAR;AAGH,GALD;;AAQA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,MAAIT,cAAc,CAAC,CAACD,WAAF,CAAjC;AAAkD,MAAA,OAAO,EAAEA;AAA3D;AAAA;AAAA;AAAA;AAAA,YADJ,EAEMA,WAAW,iBAAI,QAAC,OAAD;AAAS,MAAA,KAAK,EAAGS;AAAjB;AAAA;AAAA;AAAA;AAAA,YAFrB,EAGKP,KAAK,CAACqB,MAAN,GAAa,CAAb,gBACD,QAAC,KAAD;AAAO,MAAA,KAAK,EAAErB,KAAd;AAAqB,MAAA,QAAQ,EAAEc,WAA/B;AACI,MAAA,QAAQ,EAAEI;AADd;AAAA;AAAA;AAAA;AAAA,YADC,GAGE,gBANP;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CApDD;;GAAMrB,G;;KAAAA,G;AAsDN,eAAeA,GAAf","sourcesContent":["import {useState, useEffect} from 'react'\n\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\nconst App = () => {\n\n    const [showAddForm, setShowAddForm] = useState(false)\n\n    const [tasks , setTasks] = useState([])\n\n    useEffect(() => {\n        \n        fetchTasks()\n    }, [])\n\n    //Featch task data\n    const fetchTasks = async () =>{\n            const res = await fetch('http://localhost:5000/tasks')\n            const data = await res.json()\n            \n           return data\n        }\n\n    //Add Task\n    const addTask = (task) =>{\n        const id = Math.floor(Math.random()*100) +1\n        const newTask = {id, ...task}\n        setTasks([...tasks, newTask])\n    }\n\n    //Delete task\n    const deleteTasks = (id) =>{\n        console.log('deleting' ,id)\n        setTasks(tasks.filter((task)=> task.id !== id))\n    }\n\n    //togel reminder\n\n    const toggleReminder = (id) =>{\n        console.log('toggleReminder', id)\n        setTasks(tasks.map((task)=> task.id === id ? {\n            ...task, reminder: !task.reminder\n        } : task))\n    }\n\n\n    return (\n        <div className='container'>\n            <Header onAdd={()=>setShowAddForm(!showAddForm) } showAdd={showAddForm}/>\n            { showAddForm && <AddTask onAdd= {addTask}/>}\n            {tasks.length>0 ?(\n            <Tasks tasks={tasks} onDelete={deleteTasks} \n                onChange={toggleReminder}/>)\n            : ('No Task Found!')}\n        </div>\n    )\n}\n\nexport default App\n\n"]},"metadata":{},"sourceType":"module"}