{"ast":null,"code":"var _jsxFileName = \"/home/gaurav/ReactJs/task-tracker/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\nimport About from './components/About';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const getTasks = async () => {\n      const taskFromServer = await fetchTasks();\n      setTasks(taskFromServer);\n    };\n\n    getTasks();\n  }, []); //Featch tasks\n\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks');\n    const data = await res.json();\n    return data;\n  }; //Featch task \n\n\n  const fetchTask = async id => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`);\n    const data = await res.json();\n    return data;\n  }; //Add Task\n\n\n  const addTask = async task => {\n    // const id = Math.floor(Math.random()*100) +1\n    // const newTask = {id, ...task}\n    // setTasks([...tasks, newTask])\n    const res = await fetch('http://localhost:5000/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    });\n    const data = await res.json();\n    setTasks([...tasks, data]);\n  }; //Delete task\n\n\n  const deleteTasks = async id => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'DELETE'\n    });\n    console.log('deleting', id);\n    setTasks(tasks.filter(task => task.id !== id));\n  }; //togel reminder\n\n\n  const toggleReminder = async id => {\n    const taskToToggle = await fetchTask(id);\n    const updatedTask = { ...taskToToggle,\n      reminder: !taskToToggle.reminder\n    };\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updatedTask)\n    });\n    const data = await res.json();\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: data.reminder\n    } : task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        onAdd: () => setShowAddForm(!showAddForm),\n        showAdd: showAddForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this), showAddForm && /*#__PURE__*/_jsxDEV(AddTask, {\n        onAdd: addTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 30\n      }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n        tasks: tasks,\n        onDelete: deleteTasks,\n        onChange: toggleReminder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this) : 'No Task Found!', /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"RXG0tOUxZpiOCgfTJaB800PXfrc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/gaurav/ReactJs/task-tracker/src/App.js"],"names":["useState","useEffect","BrowserRouter","Router","Route","Header","Footer","Tasks","AddTask","About","App","showAddForm","setShowAddForm","tasks","setTasks","getTasks","taskFromServer","fetchTasks","res","fetch","data","json","fetchTask","id","addTask","task","method","headers","body","JSON","stringify","deleteTasks","console","log","filter","toggleReminder","taskToToggle","updatedTask","reminder","map","length"],"mappings":"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","sourcesContent":["import {useState, useEffect} from 'react'\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\n\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport About from './components/About'\n\nconst App = () => {\n\n    const [showAddForm, setShowAddForm] = useState(false)\n\n    const [tasks , setTasks] = useState([])\n\n    useEffect(() => {\n        \n        const getTasks = async () =>{\n            const taskFromServer  = await fetchTasks()\n            setTasks(taskFromServer)\n        } \n        getTasks()\n\n    }, [])\n\n    //Featch tasks\n    const fetchTasks = async () =>{\n            const res = await fetch('http://localhost:5000/tasks')\n            const data = await res.json()\n            \n           return data\n        }\n\n    //Featch task \n    const fetchTask = async (id) =>{\n            const res = await fetch(`http://localhost:5000/tasks/${id}`)\n            const data = await res.json()\n            \n           return data\n        }\n\n    //Add Task\n    const addTask = async (task) =>{\n        // const id = Math.floor(Math.random()*100) +1\n        // const newTask = {id, ...task}\n        // setTasks([...tasks, newTask])\n\n        const res = await fetch('http://localhost:5000/tasks', {\n            method: 'POST', \n            headers:{\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(task)\n        })\n\n        const data = await res.json()\n\n        setTasks([...tasks, data])\n        \n    }\n\n    //Delete task\n    const deleteTasks = async (id) =>{\n        await fetch (`http://localhost:5000/tasks/${id}`, {\n            method: 'DELETE'\n        })\n\n        console.log('deleting' ,id)\n        setTasks(tasks.filter((task)=> task.id !== id))\n    }\n\n    //togel reminder\n\n    const toggleReminder = async (id) =>{\n        \n        const taskToToggle = await fetchTask(id)\n\n        const updatedTask = {...taskToToggle, \n                reminder: !taskToToggle.reminder}\n\n        const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n            method: 'PUT',\n            headers:{\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(updatedTask)\n        })\n\n        const data = await res.json()\n        setTasks(tasks.map((task)=> task.id === id ? {\n            ...task, reminder: data.reminder\n        } : task))\n       \n    }\n\n\n    return (\n        <Router>\n        <div className='container'>\n            <Header onAdd={()=>setShowAddForm(!showAddForm) } showAdd={showAddForm}/>\n            { showAddForm && <AddTask onAdd= {addTask}/>}\n            {tasks.length>0 ?(\n            <Tasks tasks={tasks} onDelete={deleteTasks} \n                onChange={toggleReminder}/>)\n            : ('No Task Found!')}\n\n            <Footer/>\n        </div>\n        </Router>\n    )\n}\n\nexport default App\n\n"]},"metadata":{},"sourceType":"module"}