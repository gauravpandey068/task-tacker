{"ast":null,"code":"var _jsxFileName = \"/home/gaurav/ReactJs/task-tracker/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const getTasks = async () => {\n      const taskFromServer = await fetchTasks();\n      setTasks(taskFromServer);\n    };\n\n    getTasks();\n  }, []); //Featch task data\n\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks');\n    const data = await res.json();\n    return data;\n  }; //Add Task\n\n\n  const addTask = async task => {\n    // const id = Math.floor(Math.random()*100) +1\n    // const newTask = {id, ...task}\n    // setTasks([...tasks, newTask])\n    const res = await fetch('http://localhost:5000/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    });\n    const data = await res.json();\n    setTasks([...tasks, data]);\n  }; //Delete task\n\n\n  const deleteTasks = async id => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'DELETE'\n    });\n    console.log('deleting', id);\n    setTasks(tasks.filter(task => task.id !== id));\n  }; //togel reminder\n\n\n  const toggleReminder = async id => {\n    console.log('toggleReminder', id);\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onAdd: () => setShowAddForm(!showAddForm),\n      showAdd: showAddForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), showAddForm && /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 30\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTasks,\n      onChange: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this) : 'No Task Found!']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"RXG0tOUxZpiOCgfTJaB800PXfrc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/gaurav/ReactJs/task-tracker/src/App.js"],"names":["useState","useEffect","Header","Tasks","AddTask","App","showAddForm","setShowAddForm","tasks","setTasks","getTasks","taskFromServer","fetchTasks","res","fetch","data","json","addTask","task","method","headers","body","JSON","stringify","deleteTasks","id","console","log","filter","toggleReminder","map","reminder","length"],"mappings":"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","sourcesContent":["import {useState, useEffect} from 'react'\n\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\nconst App = () => {\n\n    const [showAddForm, setShowAddForm] = useState(false)\n\n    const [tasks , setTasks] = useState([])\n\n    useEffect(() => {\n        \n        const getTasks = async () =>{\n            const taskFromServer  = await fetchTasks()\n            setTasks(taskFromServer)\n        } \n        getTasks()\n\n    }, [])\n\n    //Featch task data\n    const fetchTasks = async () =>{\n            const res = await fetch('http://localhost:5000/tasks')\n            const data = await res.json()\n            \n           return data\n        }\n\n    //Add Task\n    const addTask = async (task) =>{\n        // const id = Math.floor(Math.random()*100) +1\n        // const newTask = {id, ...task}\n        // setTasks([...tasks, newTask])\n\n        const res = await fetch('http://localhost:5000/tasks', {\n            method: 'POST', \n            headers:{\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(task)\n        })\n\n        const data = await res.json()\n\n        setTasks([...tasks, data])\n        \n    }\n\n    //Delete task\n    const deleteTasks = async (id) =>{\n        await fetch (`http://localhost:5000/tasks/${id}`, {\n            method: 'DELETE'\n        })\n\n        console.log('deleting' ,id)\n        setTasks(tasks.filter((task)=> task.id !== id))\n    }\n\n    //togel reminder\n\n    const toggleReminder = async (id) =>{\n        console.log('toggleReminder', id)\n        setTasks(tasks.map((task)=> task.id === id ? {\n            ...task, reminder: !task.reminder\n        } : task))\n    }\n\n\n    return (\n        <div className='container'>\n            <Header onAdd={()=>setShowAddForm(!showAddForm) } showAdd={showAddForm}/>\n            { showAddForm && <AddTask onAdd= {addTask}/>}\n            {tasks.length>0 ?(\n            <Tasks tasks={tasks} onDelete={deleteTasks} \n                onChange={toggleReminder}/>)\n            : ('No Task Found!')}\n        </div>\n    )\n}\n\nexport default App\n\n"]},"metadata":{},"sourceType":"module"}