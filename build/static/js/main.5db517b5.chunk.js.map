{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","props","onClick","style","backgroundColor","color","className","buttonText","defaultProps","Header","title","onAdd","showAdd","Task","task","reminder","onDoubleClick","onChange","id","text","cursor","onDelete","day","Tasks","tasks","map","AddTask","useState","setText","date","setDate","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","target","checked","currentTarget","App","showAddForm","setShowAddForm","setTasks","Math","floor","random","newTask","length","console","log","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5db517b5.chunk.js","sourcesContent":["import React from 'react'\n\nconst Button = (props) => {\n    return <button \n    onClick= {props.onClick}\n     style={{backgroundColor:props.color}} className='btn'>\n        {props.buttonText}</button>\n}\n\nButton.defaultProps ={\n    color : 'steelblue'\n}\n\nexport default Button\n","import Button from \"./Button\"\n\nconst Header = ({title, onAdd, showAdd}) => {\n\n    return (\n        <header className='header'>\n            <h1>{title}</h1>\n            <Button buttonText={showAdd ? 'Close' : 'Add'} \n                color={showAdd ? 'red' : 'green'} onClick={onAdd}/>\n            \n        </header>\n    )\n}\n\nHeader.defaultProps = {\n    title: 'Task Tracker'\n}\n\nexport default Header\n","import React from 'react'\nimport {FaTimes} from 'react-icons/fa'\n\nconst Task = (props) => {\n    return (\n        //change css class according to reminder data\n        <div className={`task ${props.task.reminder ? 'reminder' : ''}`} \n            onDoubleClick={()=> props.onChange(props.task.id)}>\n            <h3>{props.task.text} \n            <FaTimes style= {{ color: 'red', cursor: 'pointer'}} \n            onClick={()=> props.onDelete(props.task.id)}/>\n            </h3>   \n            <p>{props.task.day}</p>     \n        </div>\n    )\n}\n\n\nexport default Task\n","import Task from \"./Task\"\n\nconst Tasks = (props) => {\n\n        return (\n        <>\n        {props.tasks.map((task) =>(\n        <Task key={task.id} task={task} onDelete={props.onDelete}\n             onChange={props.onChange}/>\n        ))}\n            \n        </>\n    )\n}\n\nexport default Tasks\n","import React from 'react'\nimport {useState} from 'react'\n\nconst AddTask = ({onAdd}) => {\n\n    const [text, setText] = useState('')\n    const [date, setDate] = useState('')\n    const [reminder, setReminder] = useState(false)\n\n    const onSubmit = (e) =>{\n        e.preventDefault()\n\n        if(!text){\n            alert('Please enter Text')\n            return\n        }else if(!date){\n            alert('Please enter Date')\n            return\n        }\n        onAdd({text, date, reminder})\n        setText('')\n        setDate('')\n        setReminder(false)\n\n    }\n\n    return (\n        <form className='add-form' onSubmit={onSubmit}>\n            <div className='form-control'>\n                <label>Task</label>\n                <input type='text' placeholder='Add Task' value={text} onChange ={\n                    (e)=> setText(e.target.value)}/>\n            </div>\n            <div className='form-control'>\n                <label>Time</label>\n                <input type='text' placeholder='Add Time' value={date} onChange={\n                    (e)=> setDate(e.target.value)}/>\n            </div>\n            <div className='form-control form-control-check'>\n                <label>Reminder</label>\n                <input type='checkbox' checked={reminder} value={reminder} onChange ={\n                    (e)=> setReminder(e.currentTarget.checked)\n                } />\n            </div>\n            <input type='submit' value='Save Task' className='btn btn-block'/>\n\n        </form>\n    )\n}\n\nexport default AddTask\n","import {useState} from 'react'\n\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\nconst App = () => {\n\n    const [showAddForm, setShowAddForm] = useState(false)\n\n    const [tasks , setTasks] = useState([\n        {\n        id: 1,\n        text: 'Assignent Submittion',\n        day: 'feb 4th at 3:30pm',\n        reminder : true,\n    },\n    {\n        id: 2,\n        text: 'Docter Appoinment',\n        day :'feb 5th at 1:30pm',\n        reminder : false,\n    },\n    {\n        id: 3,\n        text: 'Shoping',\n        day: 'feb 4th at 6:30pm',\n        reminder : true,\n    },\n    ])\n\n    //Add Task\n    const addTask = (task) =>{\n        const id = Math.floor(Math.random()*100) +1\n        const newTask = {id, ...task}\n        setTasks([...tasks, newTask])\n    }\n\n    //Delete task\n    const deleteTasks = (id) =>{\n        console.log('deleting' ,id)\n        setTasks(tasks.filter((task)=> task.id !== id))\n    }\n\n    //togel reminder\n\n    const toggleReminder = (id) =>{\n        console.log('toggleReminder', id)\n        setTasks(tasks.map((task)=> task.id === id ? {\n            ...task, reminder: !task.reminder\n        } : task))\n    }\n\n\n    return (\n        <div className='container'>\n            <Header onAdd={()=>setShowAddForm(!showAddForm) } showAdd={showAddForm}/>\n            { showAddForm && <AddTask onAdd= {addTask}/>}\n            {tasks.length>0 ?(\n            <Tasks tasks={tasks} onDelete={deleteTasks} \n                onChange={toggleReminder}/>)\n            : ('No Task Found!')}\n        </div>\n    )\n}\n\nexport default App\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}